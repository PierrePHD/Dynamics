AABZ
PR_ProblemeEspace
DEBPROC PR_ProblemeEspace M C K CL_A CHA dt g It_m ;


    Int1 = PR_IntegrProdLine g.u g.u dt ;
    Int2 = PR_IntegrProdLine g.v g.u dt ;
    Int3 = PR_IntegrProdLine g.w g.u dt ;

    Premier = (Int1*K) et (Int2*C) et (Int3*M);

* Contribution des efforts
  NbCharg = DIMENSION CHA ;
  REPETER It NbCharg ;
    CHA_i = EXTR CHA CHAR &It ;
    CHP = EXTR CHA_i CHAM ;
    EVO = EXTR CHA_i EVOL ;
    CH_ord = EXTR EVO ORDO ;
    CH_abs = EXTR EVO ABSC ;
    Int = PR_IntegrProdLine CH_ord g.u CH_abs ;

    Si (&It ega 1) ;
      Second = (CHP*Int) ;
    Sinon ;
      Second = Second + (CHP*Int) ;
    FinSi ;
  FIN It ;

* La somme sur les modes precedents

    FamiFTot FamiGTot = PR_ConcatenerFami (It_m-1) ;

    Bool = (DIMENSION FamiFTot) > 0;
    Si Bool;
        TailFami = DIMENSION FamiFTot;
        REPETER Mod TailFami;
            gk = FamiGTot.&Mod;
            fk = FamiFTot.&Mod;

            g_gk   = PR_IntegrProdLine g.u gk.u dt ;
            g_gkp  = PR_IntegrProdLine g.u gk.v dt ;
            g_gkpp = PR_IntegrProdLine g.u gk.w dt ;

            Si (&Mod ega 1) ;
                Som1 = g_gk   * fk;
                Som2 = g_gkp  * fk;
                Som3 = g_gkpp * fk;
            Sinon ;
                Som1 = Som1 + (g_gk   * fk);
                Som2 = Som2 + (g_gkp  * fk);
                Som3 = Som3 + (g_gkpp * fk);
            FinSi ;
        Fin Mod;


      Second = Second - ( (K*Som1) + (C*Som2) + (M*Som3) ) ;
    FinSi;

* Contribution des deplacements imposes
* A FAIRE !!!!!!!!!!!!

* Resolution

  Premier = Premier ET CL_A;
  f = RESO Premier Second;
  RESPRO f;


FINPROC;
