AABZ
PR_ProblemeEspace
DEBPROC PR_ProblemeEspace M C K CL_A CHA dt g It_m ;


    Int1 = PR_IntegrProdLine g.u g.u dt ;
    Int2 = PR_IntegrProdLine g.v g.u dt ;
    Int3 = PR_IntegrProdLine g.w g.u dt ;

    Premier = (Int1*K) et (Int2*C) et (Int3*M);

* Contribution des efforts
  NbCharg = DIMENSION CHA ;

  Si (NbCharg > 0);
      REPETER It NbCharg ;
        CHA_i = EXTR CHA CHAR &It ;
        CHP_i = EXTR CHA_i CHAM ;
        EVO_i = EXTR CHA_i EVOL ;
        CH_ord = EXTR EVO_i ORDO ;
        CH_abs = EXTR EVO_i ABSC ;
        Int = PR_IntegrProdLine CH_ord g.u CH_abs ;

        Si (&It ega 1) ;
          Second = (CHP_i*Int) ;
        SiNon ;
          Second = Second + (CHP_i*Int) ;
        FinSi ;
      FIN It ;
  FinSi ;

  Si ( (DIME TabEvoNL) > 0) ;
    REPETER It_NL Nb_NL ;
        FOR_NL = (Pb.Tab_NL.&It_NL.effo) ;
        CH_ord = EXTR (TabEvoNL.&It_NL) ORDO ;
        Int = PR_IntegrProdLine CH_ord g.u Vec_T ;
        Si ( (NbCharg > 0) et (&It_NL ega 1) );
            Second = Second + (FOR_NL*Int) ;
        SiNon ;
            Second = (FOR_NL*Int) ;
        FinSi ;
    Fin It_NL ;
  FinSi ;


* La somme sur les modes precedents

    FamiFTot FamiGTot = PR_ConcatenerFami (It_m-1) ;

    TailFami = DIMENSION FamiFTot;

    Si (TailFami > 0);

        Som1 = 0;
        Som2 = 0;
        Som3 = 0;

        REPETER Mod TailFami;
            gk = FamiGTot.&Mod;
            fk = FamiFTot.&Mod;

            g_gk   = PR_IntegrProdLine g.u gk.u dt ;
            g_gkp  = PR_IntegrProdLine g.u gk.v dt ;
            g_gkpp = PR_IntegrProdLine g.u gk.w dt ;

            Som1 = Som1 + (g_gk   * fk);
            Som2 = Som2 + (g_gkp  * fk);
            Som3 = Som3 + (g_gkpp * fk);

        Fin Mod;

        Si (NbCharg > 0);
            Second = Second - ( (K*Som1) + (C*Som2) + (M*Som3) ) ;
        SiNon ;
            Second =  (-1) * ( (K*Som1) + (C*Som2) + (M*Som3) ) ;
        FinSi ;

    FinSi ;

Si ((NON (NbCharg > 0)) ET (NON (TailFami > 0)));
    Mess 'il n y a ni effort ni deplacements imposes';
    Mess '--------------------------------------------';
    list CHA.1;
FinSi ;

* Resolution

  Premier = Premier ET CL_A;
  f = RESO Premier Second;
  RESPRO f;


FINPROC;
