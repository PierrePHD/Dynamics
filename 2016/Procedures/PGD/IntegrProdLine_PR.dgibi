AADZ
PR_IntegrProdLine
DEBPROC PR_IntegrProdLine g1*Listreel g2*listreel dt/flottant Vec_LocT/listreel;

  Long1=DIMENSION g1;
  Long2=DIMENSION g2;

  Bool = Long1 NEG Long2;
  Si Bool;
    Mess 'Produit de fonctions de differentes longueurs';
    Mess 'taille g1:' Long1 '   taille g2:' Long2;
    * Couper le programme
    EXTR zzz 4;
  FinSi ;


  g1_p = ENLEVER g1 1;
  g1_m = ENLEVER g1 (DIMENSION g1);
  g2_p = ENLEVER g2 1;
  g2_m = ENLEVER g2 (DIMENSION g2);

  Bool = EXISTE Vec_LocT;
  Si Bool;
    Vec_LT_p = ENLEVER Vec_LocT 1;
    Vec_LT_m = ENLEVER Vec_LocT (DIMENSION Vec_LocT);
    dt = Vec_LT_p - Vec_LT_m;
  FinSi ;

  L_a = (g1_p-g1_m)/dt;
  L_e = (g2_p-g2_m)/dt;

  *  Int_list =  ( ((dt**3)/3) * (a*e) )
  *                +( ((dt**2)/2) * ((a*g2_m)+(e*g1_m)) )
  *                +(   dt        * g2_m * g1_m ) ;

  * L operateur SOMME va integrer et donc multiplier par dt chaque
  *   intervale.

  Int_list =  ( ((dt**2)/3) * (L_a*L_e) )
                  +( (dt/2) * ((L_a*g2_m)+(L_e*g1_m)) )
                  +( g2_m * g1_m ) ;


  Si Bool ;
    Int_EVO = EVOL MANU (ENLEVER Vec_LocT (DIMENSION Vec_LocT))  Int_list ;
    Int_b = (EXTR (SOMME Int_EVO) 1)
             +( (  ( (EXTR Int_list 1) * (EXTR dt 1) )
                 + ( (EXTR Int_list (DIMENSION Int_list)) *
                     (EXTR dt (DIMENSION dt))   )
                )/2) ;
  SiNon ;
    Int_EVO = EVOL MANU (ENLEVER Vec_T (DIMENSION Vec_T))  Int_list ;
    Int_b = (EXTR (SOMME Int_EVO) 1)
            + (( (EXTR Int_list 1)
                 +(EXTR Int_list (DIMENSION Int_list))
                )*(dt/2));
  FinSi ;


  RESPRO Int_b;

FINPROC;
