LFOR = MOTS FX FY FZ FR FT MX MY MZ MT ;
L_f = MOTS UX UY UZ UR UT RX RY RZ RT ;
Pb Cal_T = AANZ;
K = Pb.K_i;
M = Pb.M_i;
CL_TOT = Pb.CL_TOT_i;
CHA_TOT = Pb.CHA_TOTi;
U0 = Pb.U0_i;
V0 = Pb.V0_i;
C = ((1e-4*K) ET (1e4*M)) * 0.1;
* !!!! Valeur de l amortissement ici
Nb_NL = DIME (Pb.Tab_NL) ;
Pb.lambda = 0.5;
P_intere = Pb.P_intere;
DirPriv = Pb.DirPriv;
dt = Cal_T.dt;
Ttot = Cal_T.Ttot;
En_Nb_Re = AAGZ dt Ttot;
Vec_T = PROG 0. PAS dt Ttot ;
CL_A = CL_TOT;
schema = 3 ;
alpha = 0.0;
beta = 0.25;
gamma = 0.5;
Aff_PtFx = FAUX;
TEMPS ZERO;
DirPt_Fx = VRAI;
C_POD = FAUX ;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
TEMPS;
NbModPOD = 4 ;
Lis_ValS Tab_Mod = ABSZ ;
Si ((VALE 'DIME') > 2) ;
P_POD = 0. 0. 0. ;
SiNon ;
P_POD = 0. 0. ;
FinSi ;
MAI_POD = MANU POI1 P_POD  ;
Tab_Mod = ABVZ Tab_Mod;
K_red = ABTZ Tab_Mod (Pb.K_i) ;
M_red = ABTZ Tab_Mod (Pb.M_i);
C_red = ABTZ Tab_Mod C;
U0_red = ABTZ Tab_Mod (Pb.U0_i) ;
V0_red = ABTZ Tab_Mod (Pb.V0_i) ;
CHA_red = ABTZ Tab_Mod (Pb.CHA_TOTi);
CL_red = K_red * 0. ;
C_POD = VRAI ;
Sol_POD = AAAZ M_red C_red K_red CL_red CHA_red
alpha beta gamma dt Ttot U0_red V0_red;
opti donne 5 ;
NbModCal = 4;
ErrDep ErrEner = AAPZ 'POD' DirPriv VRAI;
opti donne 5 ;
TEMPS ZERO;
FamiF = TABLE;
FamiG = TABLE;
*Creation des modes dep imposes non nuls et dep initiaux
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
FamiF.Imp = TABLE;
FamiG.Imp = TABLE;
FamiF.Ini = TABLE;
FamiG.Ini = TABLE;
AffMods = LECT ;
AffSolu = LECT ;
NbModCal = 4;
OPT0 = TABLE;
OPT0.Orth = VRAI;
OPT0.Upda = VRAI;
PGDPt_Fx = FAUX;
Up_Pt_Fx = VRAI;
Pb.lambda = 0.5;
Fam_FPre = Tab_Mod ;
AARZ NbModCal ; 
opti donn 5 ;
AARZ NbModCal;
TEMPS;
*OPTI TRAC PSC;
AffMods = LECT 1 2 3 4;
AffSolu = LECT 1 2 3 4;
AAKZ AffMods AffSolu P_intere DirPriv (Pb.lambda);
AAOZ AffMods (FamiF.Cal);
ErrDep ErrEner = AAPZ 'PGD' DirPriv VRAI;
opti donn 5 ;
Fam_FPre = FamiF.Cal ;
Fam_GPre = FamiG.Cal ;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 4;
AARZ NbModCal Fam_FPre Fam_GPre ;
TEMPS;
*OPTI TRAC PSC;
AffMods = LECT 1 2 3 4;
AffSolu = LECT 1 2 3 4;
AAKZ AffMods AffSolu P_intere DirPriv (Pb.lambda);
ErrDep ErrEner = AAPZ DirPriv VRAI;
list (EXTR ZZZ 4) ;
CHA_TOT0 = CHA_TOT;
AAKZ AffMods AffSolu P_intere DirPriv 0.3;
* !!!! Utiliser
CHA_NL = PR_EvalNonLin 0.3;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = Evo_NL;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AffMods = LECT 1 ;
AffSolu = LECT 1 ;
AARZ NbModCal;
AAKZ AffMods AffSolu P_intere DirPriv 0.3;
CHA_NL = PR_EvalNonLin 0.3;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.3;
CHA_NL = PR_EvalNonLin 0.3;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.3;
CHA_NL = PR_EvalNonLin 0.3;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.3;
CHA_NL = PR_EvalNonLin 0.3;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.3;
CHA_NL = PR_EvalNonLin 0.3;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.3;
CHA_NL = PR_EvalNonLin 0.3;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.4;
CHA_NL = PR_EvalNonLin 0.4;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.4;
CHA_NL = PR_EvalNonLin 0.4;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.4;
CHA_NL = PR_EvalNonLin 0.4;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.4;
CHA_NL = PR_EvalNonLin 0.4;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.4;
CHA_NL = PR_EvalNonLin 0.4;
CHA_TOT = CHA_TOT0 et CHA_NL ;
Evo_NL  = EXTR CHA_NL 'EVOL' ;
EvoNLTot = EvoNLTot + Evo_NL;
FamiF.Cal = TABLE;
FamiG.Cal = TABLE;
NbModCal = 1;
AARZ NbModCal;
Solu1 = AAAZ M C K CL_A CHA_TOT
alpha beta gamma dt Ttot U0 V0;
AAKZ AffMods AffSolu P_intere DirPriv 0.4;
*FamiF.Imp.1 = FamiF.Cal.1 ;
*FamiG.Imp.1 = FamiG.Cal.1 ;
opti donn 5;
* Attention multiplier par 2 ampli pour corespondance avec matlab.
*opti donn 5 ;
*Pas_inte = 250;
*trac Solu1.u.Pas_inte Pb.geo;
*rec_sol = AALZ 3;
*trac rec_sol.u.Pas_inte Pb.geo;
*BLA = EXCO DirPriv rec_sol.u.Pas_inte;
*Def1 = DEFO Pb.geo rec_sol.u.Pas_inte;
*Ampli = (MAXI BLA) - (MINI BLA);
*    list Ampli;
*trac (ABS BLA) Def1;
*AffMods = LECT 1 ;
*AAOZ AffMods;
*New_G= AAVZ;
*
opti sort bla;
sort EXCE Sol_dir SEPA ESPA;
